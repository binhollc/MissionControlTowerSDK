name: Build and Package BMC SDK
env:
  VERSION: 1.1.0

on:
  workflow_dispatch

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        arch: [32, 64]
        include:
          - arch: 32
            arch_python: x86
            arch_cmake: win32
          - arch: 64
            arch_python: x64
            arch_cmake: x64
        exclude:
          - os: ubuntu-latest
            arch: 32
          - os: macos-latest
            arch: 32

    runs-on: ${{ matrix.os }}

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:

    - name: Checkout repository and submodules
      uses: actions/checkout@v3
      with:
        token: ${{ env.GH_TOKEN }}
        submodules: recursive

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: ${{ matrix.arch_python }}

    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Build and stage the Bridge, library and examples (Mac and Linux)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        ./build_and_stage.sh

    - name: Build the Bridge, library and examples (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        dir
        .\build_and_stage.bat ${{ matrix.arch_cmake }}

      - name: Windows Signing
      if: runner.os == 'windows-latest'
      uses: GabrielAcostaEngler/signtool-code-sign@main
      with:
        certificate: '${{ secrets.WINDOWS_CERTIFICATE_BASE64 }}'
        cert-password: '${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}'
        cert-sha1: '${{ secrets.WINDOWS_CERTIFICATE_SHA1 }}'
        cert-description: 'Binho LLC'
        folder: staging/
        recursive: false
        timestamp-server: 'http://timestamp.digicert.com'

    - name: Create Windows installer
      if: matrix.os == 'windows-latest'
      uses: joncloud/makensis-action@v4
      with:
        script-file: bmc_sdk_installer.nsi
        arguments: /DOUTFILE=BinhoMissionControlSDK-${{ env.VERSION }}-${{ matrix.arch }}.exe

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-artifacts
        path: staging/

    - name: Upload Windows installer
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: BinhoMissionControlSDK-${{ env.VERSION }}-${{ matrix.arch }}.exe
        path: BinhoMissionControlSDK-${{ env.VERSION }}-${{ matrix.arch }}.exe
