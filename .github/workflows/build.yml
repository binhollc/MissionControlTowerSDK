name: Build and Package BMC SDK

on:
  workflow_dispatch

jobs:
  build:
    strategy:
      matrix:
        artifact: ['lib', 'sample_app']
        os: [windows-latest, ubuntu-latest, macos-latest]

        include:
          - os: windows-latest
            cmake_generator: "Visual Studio 17 2022"
            cmake_architecture_arg: "-A" # Argument prefix for architecture
            architecture: ['win32', 'x64']
            config: "Release"
            extension:
              lib: ".dll"
              sample_app: ".exe"
          - os: ubuntu-latest
            cmake_generator: "Unix Makefiles"
            cmake_architecture_arg: "" # No architecture specification for Unix Makefiles
            architecture: ['']
            config: "Release"
            extension:
              lib: ".so"
              sample_app: ""
          - os: macos-latest
            cmake_generator: "Unix Makefiles"
            cmake_architecture_arg: "" # No architecture specification for Unix Makefiles
            architecture: ['']
            config: "Release"
            extension:
              lib: ".dylib"
              sample_app: ""

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Set up environment
      run: |
        echo "ARTIFACT_NAME=bmc_sdk${{ matrix.extension.lib }}" >> $GITHUB_ENV
        echo "SUBPROJECT_DIR=${{ github.workspace }}" >> $GITHUB_ENV
        if [ "${{ matrix.artifact }}" = "sample_app" ]; then
          echo "ARTIFACT_NAME=sample_app${{ matrix.extension.sample_app }}" >> $GITHUB_ENV
          echo "SUBPROJECT_DIR=${{ github.workspace }}/sample_app" >> $GITHUB_ENV
        fi
        echo "BUILD_DIR=${{ github.workspace }}/build" >> $GITHUB_ENV
        echo "STAGING_DIR=${{ github.workspace }}/staging" >> $GITHUB_ENV

    - name: Configure CMake
      run: |
        cd $SUBPROJECT_DIR
        if [ -d "$BUILD_DIR" ]; then
          rm -r "$BUILD_DIR"
        fi
        mkdir $BUILD_DIR
        cd $BUILD_DIR
        cmake .. -G "${{ matrix.cmake_generator }}" ${{ matrix.cmake_architecture_arg }} ${{ matrix.architecture }}  

    - name: Upload build artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.architecture }}-artifacts
        path: staging/

    - name: Upload build artifacts (Linux/Mac)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-artifacts
        path: staging/
